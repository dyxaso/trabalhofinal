{
  "hash": "646f5d95fba94263f1e85756b5b31e2f",
  "result": {
    "markdown": "---\ntitle: \"MAPAS\"\nauthor: \"Yuri\"\nformat: html\n\nexecute: \n  freeze: auto\n  cache: true\n  warning: false\n---\n\n\n## Como confeccionar mapas\n\nPrincipais pacotes:\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-1_12773be8d485f7b543b8adb81ba0fe7e'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(r4pde) \nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires) ##advindo do github utilizando remotes::install_github (pacote)\n```\n:::\n\n\nDados Para plotagem do mapa de um determinado país:\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-2_f5186a47c9bca17f18ca7cd252a90e03'}\n\n```{.r .cell-code}\nsbr <- RustSoybean\n\nBRA <- ne_countries(country = \"Brazil\", \n                    returnclass = \"sf\")\nggplot(BRA) +\ngeom_sf(fill = \"white\")\n```\n\n::: {.cell-output-display}\n![](aula16_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nPlotagem de estados:\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-3_a64693fb470199d4082b28a56a7b7206'}\n\n```{.r .cell-code}\nBRA <- ne_states(country = \"Brazil\", \n                    returnclass = \"sf\")\nggplot(BRA) +\ngeom_sf(color = \"white\",\n          fill = \"darkgreen\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](aula16_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nSelecionando um estado:\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-4_71d6e86f718c6fa7f81476344528e0fc'}\n\n```{.r .cell-code}\nBRA <- ne_states(country = \"Brazil\", \n                    returnclass = \"sf\")\nMG <- BRA |> filter(name_en == \"Minas Gerais\")\nggplot(BRA) +\ngeom_sf(color = \"black\",\n          fill = \"white\") +\n  geom_sf(data = MG, color = \"black\",\n            fill = \"green\")\n```\n\n::: {.cell-output-display}\n![](aula16_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nPara plotarmos pontos específicos no mapa, necessitamos das cordenadas (log . lat).\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-5_c259919ed6b134d2962e99b2f1cb2189'}\n\n```{.r .cell-code}\nBRA <- ne_states(country = \"Brazil\", \n                    returnclass = \"sf\")\nMG <- BRA |> filter(name_en == \"Minas Gerais\")\nggplot(BRA) +\ngeom_sf(color = \"black\",\n          fill = \"white\") +\n  geom_point(data = sbr, aes(longitude, latitude), alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](aula16_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\níPara separarmos os pontos de acordo com características especificas (no caso em questão os anos de amostragem):\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-6_ecd2a3cd5b7fcaeeefadec046ea235f4'}\n\n```{.r .cell-code}\nsbr2 <- sbr |>\n  separate(planting, into = \n             c(\"year\", \"month\", \"day\"), sep = \"-\", remove = FALSE)\n\nBRA <- ne_states(country = \"Brazil\", \n                    returnclass = \"sf\")\nMG <- BRA |> filter(name_en == \"Minas Gerais\")\nggplot(BRA) +\ngeom_sf(color = \"black\",\n          fill = \"white\") +\n  geom_point(data = sbr2,\n             aes(longitude, latitude, color = year), alpha = 0.5)+\n  facet_wrap(~year)+\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](aula16_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nInserindo rosa dos ventos e escala:\n\n\n::: {.cell hash='aula16_cache/html/unnamed-chunk-7_529f23dfc5657e3020956b2fe98ebf63'}\n\n```{.r .cell-code}\nlibrary(ggspatial)\nggplot(BRA) +\n  annotation_north_arrow(location = \"bl\")+\n  annotation_scale(location = \"br\")+\n  geom_sf(color = \"black\",\n          fill = \"white\") +\n  geom_point(data = sbr2,\n             aes(longitude, latitude, color = year, size = severity), alpha = 0.5)+\n  labs(color = \"Planting Year\")+\n  theme_minimal()+\n  theme(legend.position = \"right\")\n```\n\n::: {.cell-output-display}\n![](aula16_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}