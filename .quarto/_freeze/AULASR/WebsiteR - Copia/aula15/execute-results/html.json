{
  "hash": "d874535f1276b17e4394be55cd6f8e44",
  "result": {
    "markdown": "---\ntitle: \" Tabela de contigência / Variáveis categoricas\"\nformat: html\n---\n\n::: {.cell hash='aula15_cache/html/unnamed-chunk-1_285dadfb742e021ad5eeccda5113bb8a'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n\nsurvey <- read_excel(\"dados-diversos.xlsx\",\n                     \"survey\")\nsurvey |> \n  count(year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n   year     n\n  <dbl> <int>\n1  2009   265\n2  2010   216\n3  2011   185\n```\n:::\n\n```{.r .cell-code}\nq <- table(survey$residue, survey$inc_class)\nchisq.test(q)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test with Yates' continuity correction\n\ndata:  q\nX-squared = 2.6165, df = 1, p-value = 0.1058\n```\n:::\n\n```{.r .cell-code}\nfisher.test(q)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tFisher's Exact Test for Count Data\n\ndata:  q\np-value = 0.09855\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n 0.4492084 1.0721250\nsample estimates:\nodds ratio \n  0.696718 \n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nsurvey |>\n  tabyl(year, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n year Fgra Fspp\n 2009  225   40\n 2010  187   29\n 2011  140   45\n```\n:::\n\n```{.r .cell-code}\nsurvey |> \n  filter(residue != \"NA\") |> \n  count(residue, inc_class) |> \n  ggplot(aes(residue, n, fill = inc_class))+\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](aula15_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncurve <- read_excel(\"dados-diversos.xlsx\",\n                     \"curve\")\n\ncurve2 <- curve |> \n  group_by(Irrigation, day) |> \n  summarize(mean_severity = mean(severity),\n            sd_severity = sd(severity))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ncurve2 |> \n  ggplot(aes(day, mean_severity, color = Irrigation))+\n  geom_point()+\n  geom_errorbar(aes(ymin = mean_severity - sd_severity, ymax = mean_severity + sd_severity), width = 0.1)+\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](aula15_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(epifitter)\n \ncurve3 <- curve |> \n  group_by(Irrigation, rep) |> \n  summarise(audpc = AUDPC(day, severity,\n                          y_proportion = F)) |> \n  pivot_wider(1, names_from = Irrigation,\n              values_from = audpc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0.\nℹ Please explicitly name `id_cols`, like `id_cols = 1`.\n```\n:::\n\n```{.r .cell-code}\nt.test(curve3$Drip, curve3$Furrow)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  curve3$Drip and curve3$Furrow\nt = -1.3773, df = 3.079, p-value = 0.26\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -1.3421436  0.5231436\nsample estimates:\nmean of x mean of y \n 13.38983  13.79933 \n```\n:::\n:::\n\n::: {.cell hash='aula15_cache/html/unnamed-chunk-2_424d1a3d4bb7949ac02cf92040b161ae'}\n\n```{.r .cell-code}\nlibrary(gsheet)\ntw <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1t5xftb0xSRPNFhM7h_MiPNtwt2UFUcm9/edit#gid=1594889893\")\n\ntw |> \n  group_by(cult, silicio, hai) |> \n  summarise(mean_lesion = mean(lesion_size),\n            sd_lesion = sd(lesion_size)) |> \n  ggplot(aes(hai, mean_lesion, color = silicio))+\n  geom_line()+\n  geom_point()+\n  geom_errorbar(aes(ymin = mean_lesion - sd_lesion, \n                    ymax = mean_lesion + sd_lesion),\n                width = 0.1)+\n  facet_wrap(~cult)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'cult', 'silicio'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](aula15_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='aula15_cache/html/unnamed-chunk-3_60afe50aa712c09423a7437333b3a83f'}\n\n```{.r .cell-code}\nlibrary(agricolae)\ntw2 <- tw |> \n  group_by(exp, cult, silicio, rep) |> \n  summarise(audpc = audpc(hai, lesion_size)) |> \n  filter(audpc > 0)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'exp', 'cult', 'silicio'. You can override\nusing the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntw2 |> \n  ggplot(aes(cult, audpc, color = silicio))+\n  geom_boxplot()+\n  facet_wrap(~ exp)\n```\n\n::: {.cell-output-display}\n![](aula15_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='aula15_cache/html/unnamed-chunk-4_068b330b2d582519c9094e805d2e5b99'}\n\n```{.r .cell-code}\naov1 <- aov(sqrt(audpc) ~ cult*silicio, data = tw2)\nsummary(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Df Sum Sq Mean Sq F value   Pr(>F)    \ncult          1  294.0   294.0   13.51 0.000712 ***\nsilicio       1 2363.9  2363.9  108.65 7.81e-13 ***\ncult:silicio  1  526.5   526.5   24.20 1.62e-05 ***\nResiduals    39  848.6    21.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_normality(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.146).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.638).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\n\nm1 <- emmeans(aov1, ~ cult | silicio, type = \"response\" )\nm1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nsilicio = Si-:\n cult      response    SE df lower.CL upper.CL\n Horizonte     1440 106.8 39     1233     1664\n Quartzo       1537 110.3 39     1322     1768\n\nsilicio = Si+:\n cult      response    SE df lower.CL upper.CL\n Horizonte      897  84.2 39      735     1075\n Quartzo        296  50.7 39      202      407\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the sqrt scale \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}